<!DOCTYPE html><html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Juego Basta en Línea</title>
  <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
  <script>
    const firebaseConfig = {
      databaseURL: "https://kj28-gato-default-rtdb.firebaseio.com/"
    };
    firebase.initializeApp(firebaseConfig);
    const db = firebase.database();
  </script>
  <style>
    body {
      font-family: sans-serif;
      background: #fff0f5;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }
    #game-container {
      display: none;
      flex-direction: column;
      align-items: center;
    }
    #letters {
      position: relative;
      width: 300px;
      height: 300px;
      margin-top: 30px;
    }
    .letter {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: red;
      color: white;
      text-align: center;
      line-height: 40px;
      position: absolute;
      cursor: pointer;
      user-select: none;
    }
    .selected {
      background-color: hotpink !important;
    }
    .blocked {
      background-color: gray !important;
      pointer-events: none;
    }
    #basta-button {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 15px 30px;
      border: none;
      border-radius: 10px;
      background-color: purple;
      color: white;
      font-size: 18px;
      cursor: pointer;
    }
    #turn, #timer, #category {
      margin: 10px;
      font-size: 20px;
      font-weight: bold;
    }
    #join-screen {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    input, button {
      padding: 10px;
      margin: 5px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
  </style>
</head>
<body>
  <div id="join-screen">
    <h2>Ingresa un código para jugar</h2>
    <input type="text" id="room-code" placeholder="Código de sala" />
    <button onclick="joinGame()">Unirse</button>
  </div>  <div id="game-container">
    <div id="turn"></div>
    <div id="timer"></div>
    <div id="letters"></div>
    <button id="basta-button" onclick="basta()">¡Basta!</button>
    <div id="category"></div>
  </div>  <script>
    let playerId = Math.random().toString(36).substring(2, 8);
    let roomCode = "";
    let isMyTurn = false;
    let timerInterval;
    let timeLeft = 10;
    const categories = ["Nombre", "Animal", "Color", "País", "Fruta"];
    let currentCategory = "";

    function joinGame() {
      roomCode = document.getElementById("room-code").value.trim();
      if (!roomCode) return;
      const roomRef = db.ref("basta_rooms/" + roomCode);
      roomRef.once("value", snapshot => {
        if (!snapshot.exists()) {
          roomRef.set({
            players: [playerId],
            turn: playerId,
            letters: generateLetters(),
            currentCategory: getRandomCategory(),
          });
        } else {
          const players = snapshot.val().players || [];
          if (!players.includes(playerId)) {
            players.push(playerId);
            roomRef.update({ players });
          }
        }
      });
      document.getElementById("join-screen").style.display = "none";
      document.getElementById("game-container").style.display = "flex";
      startListening();
    }

    function generateLetters() {
      return "ABCDEFGHIJKLMNÑOPQRSTUVWXYZ".split("").map(l => ({ letter: l, selected: false, blocked: false }));
    }

    function getRandomCategory() {
      return categories[Math.floor(Math.random() * categories.length)];
    }

    function startListening() {
      const roomRef = db.ref("basta_rooms/" + roomCode);
      roomRef.on("value", snapshot => {
        const data = snapshot.val();
        if (!data) return;
        isMyTurn = data.turn === playerId;
        document.getElementById("turn").innerText = isMyTurn ? "Turno de tu amorcito" : "Turno de tu amorcito";
        document.getElementById("category").innerText = "Categoría: " + data.currentCategory;
        renderLetters(data.letters);
        if (isMyTurn) {
          resetTimer();
        }
      });
    }

    function renderLetters(letters) {
      const container = document.getElementById("letters");
      container.innerHTML = "";
      const radius = 120;
      const cx = 150, cy = 150;
      const angleStep = (2 * Math.PI) / letters.length;
      letters.forEach((obj, i) => {
        const angle = i * angleStep;
        const x = cx + radius * Math.cos(angle) - 20;
        const y = cy + radius * Math.sin(angle) - 20;
        const div = document.createElement("div");
        div.className = "letter";
        if (obj.blocked) div.classList.add("blocked");
        else if (obj.selected) div.classList.add("selected");
        div.style.left = x + "px";
        div.style.top = y + "px";
        div.innerText = obj.letter;
        if (isMyTurn && !obj.selected && !obj.blocked) {
          div.onclick = () => selectLetter(obj.letter);
        }
        container.appendChild(div);
      });
    }

    function selectLetter(letter) {
      const roomRef = db.ref("basta_rooms/" + roomCode);
      roomRef.once("value", snapshot => {
        const letters = snapshot.val().letters.map(l => {
          if (l.letter === letter) l.selected = true;
          return l;
        });
        roomRef.update({ letters });
      });
    }

    function basta() {
      if (!isMyTurn) return;
      const roomRef = db.ref("basta_rooms/" + roomCode);
      roomRef.once("value", snapshot => {
        const data = snapshot.val();
        const updatedLetters = data.letters.map(l => {
          if (l.selected) {
            l.blocked = true;
            l.selected = false;
          }
          return l;
        });
        const nextTurn = data.players.find(p => p !== playerId);
        roomRef.update({ letters: updatedLetters, turn: nextTurn });
      });
    }

    function resetTimer() {
      clearInterval(timerInterval);
      timeLeft = 10;
      document.getElementById("timer").innerText = "Tiempo: 10";
      timerInterval = setInterval(() => {
        timeLeft--;
        document.getElementById("timer").innerText = "Tiempo: " + timeLeft;
        if (timeLeft === 0) {
          clearInterval(timerInterval);
          db.ref("basta_rooms/" + roomCode).once("value", snapshot => {
            const data = snapshot.val();
            const nextTurn = data.players.find(p => p !== playerId);
            db.ref("basta_rooms/" + roomCode).update({ turn: nextTurn });
            alert("Perdió tu amorcito");
          });
        }
      }, 1000);
    }
  </script></body>
</html>
